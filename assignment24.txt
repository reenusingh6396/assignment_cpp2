//1. Define a function to check whether a given number is a Prime number or not.
#include<iostream>
using namespace std;
int prime(int);
int main()
{
    int x;
    cout<<"enter a number : ";
    cin>>x;
    prime(x);
    return 0;
}
int prime(int n)
{
    int i,c=0;
    for(i=2;i<n;i++)
        if(n%i==0)
         {
             c++;
             cout<<n<<" is not prime";
             break;
         }
    if(c==0)
        cout<<n<<" is prime";
}

//2. Define a function to find the highest value digit in a given number.
#include<iostream>
using namespace std;
int maxdigit(int);
int main()
{
    int x,big;
    cout<<"enter a number : ";
    cin>>x;
    big=maxdigit(x);
    cout<<"highest digit in "<<x<<" is "<<big;
    return 0;
}
int maxdigit(int n)
{
    int h=0,rem;
    while(n)
    {
        rem=n%10;
        n=n/10;
        if(h<rem)
          h=rem;
    }
    return h;
}

//3. Define a function to calculate x raised to the power y.

#include<iostream>
using namespace std;
void power(int,int);
int main()
{
    int x,y,p;
    cout<<"enter base value and exponent ";
    cin>>x>>y;
    power(x,y);
    return 0;
}
void power(int a,int  b )
{
    int e=a;
    if(b==0)
      cout<<"1";
   while(b>1)
   {
      a=a*e;
      b--;
   }
   if(b==1)
    cout<<a;
}


//4. Define a function to print Pascal Triangle up to N lines.

#include<iostream>
using namespace std;
int fact(int n)
{
    int i,f=1;
    if(n==0||n==1)
        return 1;
    for(i=1;i<=n;i++)
        f=f*i;
    return f;
}
int  combination(int n,int r)
{
    int i,j,nCr;
    nCr=fact(n)/(fact(r)*fact(n-r));
    return nCr;
}
void pascal(int n)
{
    int i,j,comb;
   for(i=0;i<n;i++)
   {
    for(j=0;j<=(n-i-2);j++)
       cout<<" ";
    for(j=0;j<=i;j++)
       {
           comb=combination(i,j);
           cout<<comb<<" ";
       }
       cout<<endl;
   }
}
int main()
{
    int x;
    cout<<"enter number of terms ";
    cin>>x;
    pascal(x);
    return 0;
}

//5. Define a function to check whether a given number is a term in a Fibonacci series or not.
#include<iostream>
using namespace std;
int fib(int );
int main()
{
   int x,f;
   cout<<"enter a number ";
   cin>>x;
   cout<<fib(x);
   return 0;
}
int fib(int n)
{
    int a=1,b=0;
    while(a<=n)
    {
        if(n==a)
            return 1;//return 1 if number present in fibonacci series 
        a=a+b;
        b=a-b;
    }
    return 0;////return  0 if number not present in fibonacci series 
}

//6. Define a function to swap data of two int variables using call by reference
#include<iostream>
using namespace std;
void swap(int &,int &);
int main()
{
 int x,y;
 cout<<"enter two numbers ";
 cin>>x>>y;
 cout<<"numbers before swapping :"<<endl<<"x = "<<x<<endl<<"y = "<<y;
 swap(x,y);
 cout<<endl<<" after swapping "<<endl<<"x = "<<x<<endl;
 cout<<"y = "<<y;
 return 0;
}
void swap(int &a,int &b)
{
    a=a+b;
    b=a-b;
    a=a-b;
}

//7. Write a function using the default argument that is able to add 2 or 3 numbers.
#include<iostream>
using namespace std;
void sum(int ,int ,int=0);
int main()
{
    int x,y,z;
    cout<<"enter three numbers : ";
    cin>>x>>y>>z;
    sum(x,y,z);
    cout<<"enter two numbers :";
    cin>>x>>y;
    sum(x,y);
    return 0;
}
void sum(int a,int b,int c)
{
    int s;
    s=a+b+c;
    cout<<"sum is : "<<endl;
    cout<<s;
    cout<<endl;
}


//8. Define overloaded functions to calculate area of circle, area of rectangle and area of TRINANGLE
#include<iostream>
using namespace std;
int Area(int ,int );
float Area(float ,float);
float Area(int );
int main()
{
    int r,l,b;
    float x,y;
    cout<<"enter radius of circle : ";
    cin>>r;
    cout<<"enter length and bright of rectangle : ";
    cin>>l>>b;
    cout<<"enter base and hight of triangle : ";
    cin>>x>>y;
    cout<<"area of circle is : ";
    cout<<Area(r)<<endl;
    cout<<"area of rectangle is : ";
    cout<<Area(l,b)<<endl;
    cout<<"area of triangle is : ";
    cout<<Area(x,y);
    cout<<endl;
    return 0;
}
float Area(int r)
{
    return 3.14*r*r;
}
int Area(int l,int b)
{
    return l*b;
}
float Area(float h,float b)
{
    return .5*h*b;
}


//9. Write functions using function overloading to find a maximum of two numbers and both the numbers can be integer or real.

#include<iostream>
using namespace std;
int big(int ,int );
float big(float ,float );
int main()
{
     int a,b;
     float x,y;
     cout<<"enter two numbers : ";
     cin>>a>>b;
     cout<<"maximum number is : "<<big(a,b)<<endl;
     cout<<"enter two numbers : ";
     cin>>x>>y;
     cout<<"maximum number is : "<<big(x,y)<<endl;
     return 0;
}
int big(int a,int b)
{
    if(a>b)
        return a;
    return b;
}
float big(float x,float y )
{
    if(x>y)
        return x;
    return y;
}

//10. Write functions using function overloading to add two numbers having different data types

#include<iostream>
using namespace std;
int sum(int,int);
float sum(float,float);
float sum(int , float);
int main()
{
    int x,y,z;
    float a,b,c;
    cout<<"enter two numbers ";
    cin>>x>>y;
    cout<<"sum of "<<x<<" and "<<y<<" is : ";
    cout<<sum(x,y)<<endl;
    cout<<"enter two numbers ";
    cin>>a>>b;
    cout<<"sum of "<<a<<" and "<<b<<" is : ";
    cout<<sum(a,b);
    cout<<"\nenter two numbers ";
    cin>>z>>c;
    cout<<"sum of "<<z<<" and "<<c<<" is : ";
    cout<<sum(z,c);
    return 0;
}
int sum(int a,int b)
{
    return a+b;
}
float sum(float a,float b)
{
    return a+b;
}
float sum(int a, float b)
{
    return a+b;
}

